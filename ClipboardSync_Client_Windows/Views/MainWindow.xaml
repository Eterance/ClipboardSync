<Window x:Class="ClipboardSync_Client_Windows.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ClipboardSync_Client_Windows"
        xmlns:converter="clr-namespace:ClipboardSync_Client_Windows.Converters"
        xmlns:localization="clr-namespace:ClipboardSync_Client_Windows.Localization"
        mc:Ignorable="d"
        Title="{x:Static localization:Resources.BrandName}" 
        Height="640" 
        Width="400" 
        Closing="Window_Closing" 
        WindowStartupLocation="CenterScreen" StateChanged="Window_StateChanged">

    <Window.Resources>
        <converter:IsCheck2VisibilityConverter x:Key="IsCheck2VisibilityConverter"/>
        <ItemsPanelTemplate x:Key="ListBoxItemsPanel2">
            <StackPanel Orientation="Vertical">
            </StackPanel>
        </ItemsPanelTemplate>
        <Style x:Key="ListBox_History_style" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="1" SnapsToDevicePixels="true">
                            <!--把 ScrollViewer 自动滚动到底部的附加属性-->
                            <local:SmoothScrollViewer x:Name="scv" Style="{StaticResource UWPstyle_scrollviewer}" Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </local:SmoothScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                            </Trigger>
                            <Trigger Property="Selector.IsSelected" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="Black"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 剪贴板历史记录子项模板 -->
        <DataTemplate x:Key="History_Item_Template">
            <Grid Height="64" Width="auto"  HorizontalAlignment="Stretch" MouseRightButtonUp="Grid_MouseRightButtonUp">
                <!-- 主要数据面板 -->
                <Grid Height="auto" 
                      Width="auto" 
                      HorizontalAlignment="Stretch"
                      x:Name="History_Grid" 
                      MouseLeftButtonUp="Grid_History_MouseLeftButtonUp"
                      Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock 
                    Text="{Binding}" 
                    FontSize="{DynamicResource FontSize.Normal}" 
                    TextTrimming="CharacterEllipsis" 
                    TextWrapping="Wrap" 
                    Margin="4 4 4 4"
                    Foreground="{DynamicResource Foreground.MainColor}"/>
                </Grid>
                <!-- 操作面板 -->
                <Grid Height="auto" 
                      Width="auto" 
                      HorizontalAlignment="Stretch" 
                      Visibility="Hidden"
                      x:Name="Control_Grid"
                      Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0"
                            x:Name="Back_Button"
                            Click="Back_Button_Click"
                            CommandParameter="{Binding .}"
                            Style="{DynamicResource ResourceKey=HiddenStyleButton}"
                            Background="{StaticResource ResourceKey=Button.BackButton.Background}"
                            Content="{x:Static localization:Resources.Back}"/>
                    <Button Grid.Column="1" 
                            x:Name="Pin_Button"
                            Click="Pin_Button_Click"
                            CommandParameter="{Binding .}"
                            Style="{DynamicResource ResourceKey=HiddenStyleButton}"
                            Background="{StaticResource ResourceKey=Button.PinButton.Background}"
                            Content="{x:Static localization:Resources.Pin}"/>
                    <Button Grid.Column="2" 
                            x:Name="Delete_History_Button"
                            Click="Delete_History_Button_Click"
                            CommandParameter="{Binding .}"
                            Style="{DynamicResource ResourceKey=HiddenStyleButton}"
                            Background="{StaticResource ResourceKey=Button.DeleteButton.Background}"
                            Content="{x:Static localization:Resources.Delete}"/>
                    <!-- &#x0a; 代表换行-->
                    <!-- https://stackoverflow.com/questions/8525396/how-to-put-a-new-line-into-a-wpf-textblock-control -->
                    <Button Grid.Column="3" 
                            x:Name="Detail_Button"
                            Click="Detail_Button_Click"
                            CommandParameter="{Binding .}"
                            Style="{DynamicResource ResourceKey=HiddenStyleButton}"
                            Background="{StaticResource ResourceKey=Button.DeleteAllButton.Background}"
                            Content="{x:Static localization:Resources.Detail}"/>
                </Grid>
            </Grid>
        </DataTemplate>

        <!-- 剪贴板listbox容器模板 -->
        <Style TargetType="{x:Type ListBoxItem}" x:Key="ContainerStyle_History">
            <Setter Property="Margin" Value="16 4 16 4"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="ContentTemplate" Value="{StaticResource History_Item_Template}" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <!--https://www.cnblogs.com/jjseen/p/5491698.html-->
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{StaticResource ResourceKey=Item.Normal.Background}" BorderThickness="2" Background="{StaticResource Item.Normal.Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource color_buttonMouseOver}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                                <!-- 鼠标滑过的阴影效果 -->
                                <!-- <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="{DynamicResource shadowColor_black}" ShadowDepth="0" BlurRadius="{DynamicResource shadowBlurRadius}" Opacity="10"/>
                                    </Setter.Value>
                                </Setter> -->
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 已固定子项模板 -->
        <DataTemplate x:Key="Pinned_Item_Template">
            <Grid Height="64" Width="auto"  HorizontalAlignment="Stretch" MouseRightButtonUp="Grid_MouseRightButtonUp">
                <!-- 主要数据面板 -->
                <Grid Height="auto" 
                      Width="auto" 
                      HorizontalAlignment="Stretch"
                      x:Name="History_Grid" 
                      MouseLeftButtonUp="Grid_History_MouseLeftButtonUp"
                      Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock 
                    Text="{Binding}" 
                    FontSize="{DynamicResource FontSize.Normal}" 
                    TextTrimming="CharacterEllipsis" 
                    TextWrapping="Wrap" 
                    Margin="4 4 4 4"
                    Foreground="{DynamicResource Foreground.MainColor}"/>
                </Grid>
                <!-- 操作面板 -->
                <Grid Height="auto" 
                      Width="auto" 
                      HorizontalAlignment="Stretch" 
                      Visibility="Hidden"
                      x:Name="Control_Grid"
                      Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0"
                            x:Name="Back_Button"
                            Click="Back_Button_Click"
                            CommandParameter="{Binding .}"
                            Style="{DynamicResource ResourceKey=HiddenStyleButton}"
                            Background="{StaticResource ResourceKey=Button.BackButton.Background}"
                            Content="{x:Static localization:Resources.Back}"/>
                    <Button Grid.Column="1" 
                            x:Name="Unpin_Button"
                            Click="Unpin_Button_Click"
                            CommandParameter="{Binding .}"
                            Style="{DynamicResource ResourceKey=HiddenStyleButton}"
                            Background="{StaticResource ResourceKey=Button.PinButton.Background}"
                            Content="{x:Static localization:Resources.Unpin}"/>
                    <Button Grid.Column="2" 
                            x:Name="Delete_Pinned_Button"
                            Click="Delete_Pinned_Button_Click"
                            CommandParameter="{Binding .}"
                            Style="{DynamicResource ResourceKey=HiddenStyleButton}"
                            Background="{StaticResource ResourceKey=Button.DeleteButton.Background}"
                            Content="{x:Static localization:Resources.Delete}"/>
                    <Button Grid.Column="3" 
                            x:Name="Detail_Button"
                            Click="Detail_Button_Click"
                            CommandParameter="{Binding .}"
                            Style="{DynamicResource ResourceKey=HiddenStyleButton}"
                            Background="{StaticResource ResourceKey=Button.DeleteAllButton.Background}"
                            Content="{x:Static localization:Resources.Detail}"/>
                </Grid>
            </Grid>
        </DataTemplate>
        <!-- 剪贴板listbox容器模板 -->
        <Style TargetType="{x:Type ListBoxItem}" x:Key="ContainerStyle_Pinned" BasedOn="{StaticResource ContainerStyle_History}">
            <Setter Property="ContentTemplate" Value="{StaticResource Pinned_Item_Template}" />
        </Style>
    </Window.Resources>

    <Grid>
        <local:SmoothScrollViewer Margin="8, 8, 0, 8"
                      Style="{DynamicResource ResourceKey=UWPstyle_scrollviewer}">
            <StackPanel x:Name="Main_StackPanel"
                        Margin="0, 0, 8, 0">
                <Label x:Name="ConnectionStatusLabel"
                       FontSize="{StaticResource FontSize.Title}"
                       HorizontalContentAlignment="Center"
                       VerticalContentAlignment="Center" 
                       FontWeight="Bold">
                    <TextBlock TextWrapping="Wrap"
                               Text="{Binding SubViewModel.ConnectionStatusInstruction}" />
                </Label>
                <!-- Server Address -->
                <Label Margin="0,20,0,0"
                       FontSize="{StaticResource FontSize.Title}">
                    <TextBlock TextWrapping="Wrap"
                               Text="{x:Static localization:Resources.ServerAddr}" />
                </Label>
                <Label FontSize="{StaticResource FontSize.Description}">
                    <TextBlock TextWrapping="Wrap"
                               Text="{x:Static localization:Resources.ServerAddrDescription}" />
                </Label>
                <TextBox x:Name="IpEndPointsEditor" 
                         Margin="0,8,0,0"
                         Height="60" 
                         FontSize="{StaticResource FontSize.Description}"
                         TextWrapping="Wrap" 
                         HorizontalAlignment="Stretch"
                         Text="{Binding SubViewModel.IPEndPointsString}"/>
                <Button Content="{x:Static localization:Resources.SaveAndReconnect}" 
                        Margin="20,8,20,0"
                        Height="40"
                         FontSize="{StaticResource FontSize.Normal}"
                        Command="{Binding SubViewModel.SaveAndConnectCommand}"/>
                <!-- HistoryList Settings -->
                <Label Margin="0,40,0,0"
                       FontSize="{StaticResource FontSize.Title}">
                    <TextBlock TextWrapping="Wrap"
                               Text="{x:Static localization:Resources.HistoryListCapacity}" />
                </Label>
                <Label FontSize="{StaticResource FontSize.Description}">
                    <TextBlock TextWrapping="Wrap"
                               Text="{x:Static localization:Resources.HistoryListCapacityDescription}" />
                </Label>
                <Grid Margin="0,8,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Column="0"
                             Margin="0,8,20,0"
                             Height="40" 
                             HorizontalAlignment="Stretch"
                             VerticalAlignment="Center"
                             HorizontalContentAlignment="Center"
                             VerticalContentAlignment="Center"
                             FontSize="{StaticResource FontSize.Description}"
                             TextWrapping="Wrap" 
                             Text="{Binding SubViewModel.HistoryListCapacity}"/>
                    <Button Grid.Column="1"
                            Margin="0,8,0,0"
                            FontSize="{StaticResource FontSize.Normal}"
                            Content="{x:Static localization:Resources.Save}" 
                            Command="{Binding SubViewModel.ApplyHistoryListCapacityCommand}"/>
                </Grid>
                <!-- Server Settings -->
                <Label Margin="0,40,0,0"
                       FontSize="{StaticResource FontSize.Title}">
                    <TextBlock TextWrapping="Wrap"
                               Text="{x:Static localization:Resources.ServerCacheCapacity}" />
                </Label>
                <Label FontSize="{StaticResource FontSize.Description}">
                    <TextBlock TextWrapping="Wrap"
                               Text="{x:Static localization:Resources.ServerCacheCapacityDescription}" />
                </Label>
                <Grid Margin="0,8,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Column="0"
                             Margin="0,8,20,0"
                             Height="40" 
                             HorizontalAlignment="Stretch"
                             VerticalAlignment="Center"
                             HorizontalContentAlignment="Center"
                             VerticalContentAlignment="Center"
                             FontSize="{StaticResource FontSize.Description}"
                             TextWrapping="Wrap" 
                             Text="{Binding SubViewModel.ServerCacheCapacity}"/>
                    <Button Grid.Column="1"
                            Margin="0,8,0,0"
                            FontSize="{StaticResource FontSize.Normal}"
                            IsEnabled="{Binding SubViewModel.IsConnected}"
                            Content="{x:Static localization:Resources.Save}" 
                            Command="{Binding SubViewModel.ApplyServerCacheCapacityCommand}"/>
                </Grid>
                <!-- Language Settings -->
                <Label Margin="0,40,0,0"
                       FontSize="{StaticResource FontSize.Title}">
                    <TextBlock TextWrapping="Wrap"
                               Text="{x:Static localization:Resources.Language}" />
                </Label>
                <ComboBox ItemsSource="{Binding LanguageList}"
                          SelectedItem="{Binding SelectedLanguage}"
                          Margin="0,8,0,20"
                          Height="40"
                          VerticalContentAlignment="Center">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding DisplayLanguage}"
                                       FontSize="{StaticResource FontSize.Description}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </StackPanel>
        </local:SmoothScrollViewer>

        <Popup 
            x:Name="Popup_ClipBroad" 
            PopupAnimation="Scroll" 
            Placement="Mouse" 
            StaysOpen="False" 
            IsOpen="False" 
            AllowsTransparency="True">
            <Grid Width="300" Height="400" Background="#c8c8c8">
                <Grid x:Name="Grid_BackgroundMain"  Background="{DynamicResource Grid.Background.MainColor}" Margin="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="48"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <RadioButton 
                            x:Name="History_Radiobutton" 
                            Content="{x:Static localization:Resources.Clipboard}" 
                            Style="{DynamicResource ResourceKey=RadioButtonStyleDark}" 
                            Grid.Column="0" 
                            IsChecked="True"/>
                        <RadioButton 
                            x:Name="Pinned_Radiobutton" 
                            Content="{x:Static localization:Resources.Pinned}" 
                            Style="{DynamicResource ResourceKey=RadioButtonStyleDark}" 
                            Grid.Column="1"/>
                        <Button x:Name="Setting_Button" 
                                Grid.Column="2" 
                                Click="Setting_Button_Click"
                                Style="{DynamicResource ResourceKey=HiddenStyleButton}" 
                                Content="{x:Static localization:Resources.Settings}"/>
                    </Grid>
                    <Grid Grid.Row="1"
                          Visibility="{Binding ElementName=History_Radiobutton, Path=IsChecked, Converter={StaticResource IsCheck2VisibilityConverter}}"
                          >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="50"/>
                        </Grid.RowDefinitions>
                        <Button Grid.Row="1" 
                                Margin="4 4 4 4"
                                Style="{DynamicResource ResourceKey=HiddenStyleButton}" 
                                Content="{x:Static localization:Resources.ClearAll}"
                                Command="{Binding SubViewModel.ClearHistoryListCommand}"/>
                        <ListBox x:Name="ListBox_HistoryList"                                  
                                 ItemsPanel="{DynamicResource ListBoxItemsPanel2}"
                                 Style="{DynamicResource ResourceKey=ListBox_History_style}" 
                                 VirtualizingPanel.ScrollUnit="Pixel" 
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                                 ScrollViewer.VerticalScrollBarVisibility="Visible" 
                                 BorderThickness="0" 
                                 Margin="-1,0,0,0" 
                                 SelectionMode="Single" 
                                 ItemContainerStyle="{StaticResource ContainerStyle_History}" 
                                 Grid.Row="0"
                                 ItemsSource="{Binding SubViewModel.HistoryList}"
                                 SelectionChanged="ListBox_History_SelectionChanged">
                        </ListBox>
                    </Grid>
                    <ListBox x:Name="ListBox_PinnedList" 
                            Visibility="{Binding ElementName=Pinned_Radiobutton, Path=IsChecked, Converter={StaticResource IsCheck2VisibilityConverter}}" 
                            ItemsPanel="{DynamicResource ListBoxItemsPanel2}"
                            Style="{DynamicResource ResourceKey=ListBox_History_style}" 
                            VirtualizingPanel.ScrollUnit="Pixel" 
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                            ScrollViewer.VerticalScrollBarVisibility="Visible" 
                            BorderThickness="0"
                            Margin="-1,0,0,0" SelectionMode="Single" 
                            ItemContainerStyle="{StaticResource ContainerStyle_Pinned}" 
                            Grid.Row="1" 
                            ItemsSource="{Binding SubViewModel.PinnedList}"
                            SelectionChanged="ListBox_Pinned_SelectionChanged" >
                    </ListBox>
                </Grid>
            </Grid>
        </Popup>
    </Grid>
</Window>
