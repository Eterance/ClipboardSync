@page "/pinned"
@using ClipboardSync.BlazorServer.Components
@using ClipboardSync.Common.ViewModels
@using ClipboardSync.Common.Services
@using ClipboardSync.Common.Models
@using System.ComponentModel;
@inject NavigationManager Navigation
@inject ClipboardManageService SubViewModel
@inject UriModel UriModel
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage


<h1>Pinned</h1>

<CascadingValue Value=@SubViewModel Name="SubViewModel">
    <PinnedListComponent />
</CascadingValue>

@code {

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // https://github.com/Blazored/SessionStorage
        var AccessToken = await sessionStorage.GetItemAsync<string>("AccessToken");
        var RefreshToken = await sessionStorage.GetItemAsync<string>("RefreshToken");
        if (UriModel.RootUri == null)
        {
            UriModel.RootUri = Navigation.ToAbsoluteUri("").ToString();
        }
        if (SubViewModel.IsInitialized == false)
        {
            SubViewModel.Initialize((Navigation.ToAbsoluteUri("/ServerHub")).ToString());
        }
        SubViewModel.PropertyChanged += OnPropertyChangedHandler;
        await base.OnAfterRenderAsync(firstRender);
    }

    async void OnPropertyChangedHandler(object sender, PropertyChangedEventArgs e)
    {
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }

    public void Dispose()
    {
        SubViewModel.PropertyChanged -= OnPropertyChangedHandler;
    }
}
