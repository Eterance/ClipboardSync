@using Microsoft.AspNetCore.Components.Web
@namespace ClipboardSync.BlazorServer.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="css/custom.css" rel="stylesheet" />
    <!--<link href="css/textAreaStyle.css" rel="stylesheet" />-->
	
    <link href="ClipboardSync.BlazorServer.styles.css" rel="stylesheet" />
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
    <script>
        window.clipboardCopy = {
            // Original method: https://chrissainty.com/copy-to-clipboard-in-blazor/ not work in mobile browsers
            // https://stackoverflow.com/a/74528564
            copyText: function (text) {
                return new Promise((resolve, reject) => {
                    if (typeof navigator !== "undefined" && typeof navigator.clipboard !== "undefined" && navigator.permissions !== "undefined") {
                        const type = "text/plain";
                        const blob = new Blob([text], { type });
                        const data = [new ClipboardItem({ [type]: blob })];
                        navigator.permissions.query({ name: "clipboard-write" }).then((permission) => {
                            if (permission.state === "granted" || permission.state === "prompt") {
                                navigator.clipboard.write(data).then(resolve, reject).catch(reject);
                            }
                            else {
                                reject(new Error("Permission not granted!"));
                            }
                        });
                    }
                    else if (document.queryCommandSupported && document.queryCommandSupported("copy")) {
                        var textarea = document.createElement("textarea");
                        textarea.textContent = text;
                        textarea.style.position = "fixed";
                        textarea.style.width = '2em';
                        textarea.style.height = '2em';
                        textarea.style.padding = 0;
                        textarea.style.border = 'none';
                        textarea.style.outline = 'none';
                        textarea.style.boxShadow = 'none';
                        textarea.style.background = 'transparent';
                        document.body.appendChild(textarea);
                        textarea.focus();
                        textarea.select();
                        try {
                            document.execCommand("copy");
                            document.body.removeChild(textarea);
                            resolve();
                        }
                        catch (e) {
                            document.body.removeChild(textarea);
                            reject(e);
                        }
                    }
                    else {
                        reject(new Error("None of copying methods are supported by this browser!"));
                    }
                });
            }
        };

        // generate by chatgpt
        window.clipboardRead = {
            readText: function () {
                return new Promise((resolve, reject) => {
                    if (typeof navigator !== "undefined" && typeof navigator.clipboard !== "undefined" && navigator.permissions !== "undefined") {
                        navigator.permissions.query({ name: "clipboard-read" }).then((permission) => {
                            if (permission.state === "granted" || permission.state === "prompt") {
                                navigator.clipboard.readText().then(text => {
                                    resolve(text);
                                }).catch(error => {
                                    reject(error);
                                });
                            } else {
                                reject(new Error("Permission not granted!"));
                            }
                        });
                    } else if (document.queryCommandSupported && document.queryCommandSupported("paste")) {
                        const textarea = document.createElement("textarea");
                        textarea.style.position = "fixed";
                        textarea.style.width = '2em';
                        textarea.style.height = '2em';
                        textarea.style.padding = 0;
                        textarea.style.border = 'none';
                        textarea.style.outline = 'none';
                        textarea.style.boxShadow = 'none';
                        textarea.style.background = 'transparent';
                        document.body.appendChild(textarea);
                        textarea.focus();
                        try {
                            document.execCommand("paste");
                            const text = textarea.value;
                            document.body.removeChild(textarea);
                            resolve(text);
                        } catch (e) {
                            document.body.removeChild(textarea);
                            reject(e);
                        }
                    } else {
                        reject(new Error("None of pasting methods are supported by this browser!"));
                    }
                });
            }
        };

        // generate by chatgpt
        window.adjustTextareaHeight = function (textarea) {
            textarea.style.height = "auto";
            textarea.style.height = (textarea.scrollHeight + 2) + "px";
        };

        // https://www.codingnepalweb.com/auto-resize-textarea-html-css-javascript/
        window.addEventListenercopy = function (textarea2) {
            textarea2.addEventListener("keyup", e => {
                textarea.style.height = "63px";
                let scHeight = e.target.scrollHeight;
                textarea.style.height = `${scHeight}px`;
            });
        };
    </script>
</head>
<body>
    @RenderBody()

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
</body>
</html>
