@using ClipboardSync.BlazorServer.Services;
@using ClipboardSync.Common.Services
@using ClipboardSync.Common.ViewModels;
@using System.Collections.ObjectModel;
@inject BlazorServerClipboardService ClipboardService

@if (SubViewModel?.HistoryList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="card-deck">
        @lock (SubViewModel.HistoryList)
        {
            @foreach (string history_text in SubViewModel.HistoryList)
            {
                <div class="card mb-3 text-white bg-dark" style="min-width: 20rem; max-width: 200rem;">
                    <div class="card-body">
                        <p class="card-text line-clamp-6">@history_text</p>
                        <div class="d-flex justify-content-between">
                            <CascadingValue Value=@history_text Name="Text">
                                <CopyToClipboardButton />
                            </CascadingValue>
                            <div class="d-flex justify-content-end gap-2">
                                <button class="btn btn-primary" @onclick="@(() => SubViewModel.Pin(history_text))">Pin</button>
                                <button class="btn btn-primary" @onclick="@(() => {})">Detail</button>
                                <button class="btn btn-primary" @onclick="@(() => SubViewModel.HistoryList.Remove(history_text))">Delete</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        
    </div>

}

@code {
    [CascadingParameter(Name = "SubViewModel")]
    ClipboardViewModel SubViewModel { get; set; }
}
