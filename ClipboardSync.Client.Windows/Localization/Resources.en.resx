<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Lang_en" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Lang_zh_cn" xml:space="preserve">
    <value>简体中文 (Simplified Chinese)</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LanguageDescription" xml:space="preserve">
    <value>Restart the application to apply the language change.</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Pin" xml:space="preserve">
    <value>Pin</value>
  </data>
  <data name="Unpin" xml:space="preserve">
    <value>Unpin</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Detail" xml:space="preserve">
    <value>Detail</value>
  </data>
  <data name="CopyAll" xml:space="preserve">
    <value>Copy All</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Clipboard" xml:space="preserve">
    <value>Clipboard</value>
  </data>
  <data name="Pinned" xml:space="preserve">
    <value>Pinned</value>
  </data>
  <data name="ClearAll" xml:space="preserve">
    <value>Clear All</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="ServerAddr" xml:space="preserve">
    <value>Server Address</value>
  </data>
  <data name="ServerAddrDescription" xml:space="preserve">
    <value>The format is IP:port, with multiple addresses separated by semicolons, such as: 
192.168.1.2:6789; 10.20.31.54:2333
When multiple addresses are specified, The front of the line is tried more first.</value>
  </data>
  <data name="ServerAddrPlaceholder" xml:space="preserve">
    <value>You need to enter at least one server address!!!</value>
  </data>
  <data name="SaveAndReconnect" xml:space="preserve">
    <value>Save &amp; Reconnect</value>
  </data>
  <data name="HistoryListCapacity" xml:space="preserve">
    <value>Clipboard History Capacity</value>
  </data>
  <data name="HistoryListCapacityDescription" xml:space="preserve">
    <value>Only this device will be affected. To not limit the size, enter a non-positive number.</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ServerCacheCapacity" xml:space="preserve">
    <value>Server History Cache Capacity</value>
  </data>
  <data name="ServerCacheCapacityDescription" xml:space="preserve">
    <value>To not limit the size, enter a non-positive number.</value>
  </data>
  <data name="BrandName" xml:space="preserve">
    <value>ClipBoardSync Desktop</value>
  </data>
  <data name="Sent" xml:space="preserve">
    <value>Sent.</value>
  </data>
  <data name="ClipboardHistoryCapacityChanged2" xml:space="preserve">
    <value>Clipboard history capacity changed to </value>
  </data>
  <data name="Period" xml:space="preserve">
    <value>. </value>
  </data>
  <data name="Unlimited" xml:space="preserve">
    <value>Unlimited</value>
  </data>
  <data name="Try2Connect2" xml:space="preserve">
    <value>Try to connect to</value>
  </data>
  <data name="AllServersAreUnavailable" xml:space="preserve">
    <value>All servers are unavailable.</value>
  </data>
  <data name="Connected2" xml:space="preserve">
    <value>Connected to</value>
  </data>
  <data name="SendFail" xml:space="preserve">
    <value>Sending failed. It may be that the server is not yet connected, or it may be an attempt to send empty text.</value>
  </data>
  <data name="NotAValidUrl" xml:space="preserve">
    <value>not a valid Url.</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CancelLogin" xml:space="preserve">
    <value>Cancel Login</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PleaseLogin2TheServer" xml:space="preserve">
    <value>Please Login to the Server</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>UserName</value>
  </data>
  <data name="UsernameOrPasswordError" xml:space="preserve">
    <value>UserName or Password Error.</value>
  </data>
  <data name="CannotConnect2Server" xml:space="preserve">
    <value>Cannot connect to the server. Please check your network, or check if the server is turned on.</value>
  </data>
</root>